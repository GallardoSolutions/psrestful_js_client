/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.psrestful);
  }
}(this, function(expect, psrestful) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ConfigurationOutput', function() {
      beforeEach(function() {
        instance = new psrestful.ConfigurationOutput();
      });

      it('should create an instance of ConfigurationOutput', function() {
        // TODO: update the code to test ConfigurationOutput
        expect(instance).to.be.a(psrestful.ConfigurationOutput);
      });

      it('should have the property partArray (base name: "PartArray")', function() {
        // TODO: update the code to test the property partArray
        expect(instance).to.have.property('partArray');
        // expect(instance.partArray).to.be(expectedValueLiteral);
      });

      it('should have the property locationArray (base name: "LocationArray")', function() {
        // TODO: update the code to test the property locationArray
        expect(instance).to.have.property('locationArray');
        // expect(instance.locationArray).to.be(expectedValueLiteral);
      });

      it('should have the property productId (base name: "productId")', function() {
        // TODO: update the code to test the property productId
        expect(instance).to.have.property('productId');
        // expect(instance.productId).to.be(expectedValueLiteral);
      });

      it('should have the property currency (base name: "currency")', function() {
        // TODO: update the code to test the property currency
        expect(instance).to.have.property('currency');
        // expect(instance.currency).to.be(expectedValueLiteral);
      });

      it('should have the property fobArray (base name: "FobArray")', function() {
        // TODO: update the code to test the property fobArray
        expect(instance).to.have.property('fobArray');
        // expect(instance.fobArray).to.be(expectedValueLiteral);
      });

      it('should have the property fobPostalCode (base name: "fobPostalCode")', function() {
        // TODO: update the code to test the property fobPostalCode
        expect(instance).to.have.property('fobPostalCode');
        // expect(instance.fobPostalCode).to.be(expectedValueLiteral);
      });

      it('should have the property priceType (base name: "priceType")', function() {
        // TODO: update the code to test the property priceType
        expect(instance).to.have.property('priceType');
        // expect(instance.priceType).to.be(expectedValueLiteral);
      });

    });
  });

}));
