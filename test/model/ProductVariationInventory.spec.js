/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PsResTfulServiceApi);
  }
}(this, function(expect, PsResTfulServiceApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ProductVariationInventory', function() {
      beforeEach(function() {
        instance = new PsResTfulServiceApi.ProductVariationInventory();
      });

      it('should create an instance of ProductVariationInventory', function() {
        // TODO: update the code to test ProductVariationInventory
        expect(instance).to.be.a(PsResTfulServiceApi.ProductVariationInventory);
      });

      it('should have the property partID (base name: "partID")', function() {
        // TODO: update the code to test the property partID
        expect(instance).to.have.property('partID');
        // expect(instance.partID).to.be(expectedValueLiteral);
      });

      it('should have the property partDescription (base name: "partDescription")', function() {
        // TODO: update the code to test the property partDescription
        expect(instance).to.have.property('partDescription');
        // expect(instance.partDescription).to.be(expectedValueLiteral);
      });

      it('should have the property partBrand (base name: "partBrand")', function() {
        // TODO: update the code to test the property partBrand
        expect(instance).to.have.property('partBrand');
        // expect(instance.partBrand).to.be(expectedValueLiteral);
      });

      it('should have the property priceVariance (base name: "priceVariance")', function() {
        // TODO: update the code to test the property priceVariance
        expect(instance).to.have.property('priceVariance');
        // expect(instance.priceVariance).to.be(expectedValueLiteral);
      });

      it('should have the property quantityAvailable (base name: "quantityAvailable")', function() {
        // TODO: update the code to test the property quantityAvailable
        expect(instance).to.have.property('quantityAvailable');
        // expect(instance.quantityAvailable).to.be(expectedValueLiteral);
      });

      it('should have the property attributeColor (base name: "attributeColor")', function() {
        // TODO: update the code to test the property attributeColor
        expect(instance).to.have.property('attributeColor');
        // expect(instance.attributeColor).to.be(expectedValueLiteral);
      });

      it('should have the property attributeSize (base name: "attributeSize")', function() {
        // TODO: update the code to test the property attributeSize
        expect(instance).to.have.property('attributeSize');
        // expect(instance.attributeSize).to.be(expectedValueLiteral);
      });

      it('should have the property attributeSelection (base name: "attributeSelection")', function() {
        // TODO: update the code to test the property attributeSelection
        expect(instance).to.have.property('attributeSelection');
        // expect(instance.attributeSelection).to.be(expectedValueLiteral);
      });

      it('should have the property attributeFlexArray (base name: "AttributeFlexArray")', function() {
        // TODO: update the code to test the property attributeFlexArray
        expect(instance).to.have.property('attributeFlexArray');
        // expect(instance.attributeFlexArray).to.be(expectedValueLiteral);
      });

      it('should have the property customProductMessage (base name: "customProductMessage")', function() {
        // TODO: update the code to test the property customProductMessage
        expect(instance).to.have.property('customProductMessage');
        // expect(instance.customProductMessage).to.be(expectedValueLiteral);
      });

      it('should have the property entryType (base name: "entryType")', function() {
        // TODO: update the code to test the property entryType
        expect(instance).to.have.property('entryType');
        // expect(instance.entryType).to.be(expectedValueLiteral);
      });

      it('should have the property validTimestamp (base name: "validTimestamp")', function() {
        // TODO: update the code to test the property validTimestamp
        expect(instance).to.have.property('validTimestamp');
        // expect(instance.validTimestamp).to.be(expectedValueLiteral);
      });

    });
  });

}));
