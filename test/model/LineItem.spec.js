/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.psrestful);
  }
}(this, function(expect, psrestful) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('LineItem', function() {
      beforeEach(function() {
        instance = new psrestful.LineItem();
      });

      it('should create an instance of LineItem', function() {
        // TODO: update the code to test LineItem
        expect(instance).to.be.a(psrestful.LineItem);
      });

      it('should have the property lineNumber (base name: "lineNumber")', function() {
        // TODO: update the code to test the property lineNumber
        expect(instance).to.have.property('lineNumber');
        // expect(instance.lineNumber).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property lineType (base name: "lineType")', function() {
        // TODO: update the code to test the property lineType
        expect(instance).to.have.property('lineType');
        // expect(instance.lineType).to.be(expectedValueLiteral);
      });

      it('should have the property quantity (base name: "Quantity")', function() {
        // TODO: update the code to test the property quantity
        expect(instance).to.have.property('quantity');
        // expect(instance.quantity).to.be(expectedValueLiteral);
      });

      it('should have the property fobId (base name: "fobId")', function() {
        // TODO: update the code to test the property fobId
        expect(instance).to.have.property('fobId');
        // expect(instance.fobId).to.be(expectedValueLiteral);
      });

      it('should have the property toleranceDetails (base name: "ToleranceDetails")', function() {
        // TODO: update the code to test the property toleranceDetails
        expect(instance).to.have.property('toleranceDetails');
        // expect(instance.toleranceDetails).to.be(expectedValueLiteral);
      });

      it('should have the property allowPartialShipments (base name: "allowPartialShipments")', function() {
        // TODO: update the code to test the property allowPartialShipments
        expect(instance).to.have.property('allowPartialShipments');
        // expect(instance.allowPartialShipments).to.be(expectedValueLiteral);
      });

      it('should have the property unitPrice (base name: "unitPrice")', function() {
        // TODO: update the code to test the property unitPrice
        expect(instance).to.have.property('unitPrice');
        // expect(instance.unitPrice).to.be(expectedValueLiteral);
      });

      it('should have the property lineItemTotal (base name: "lineItemTotal")', function() {
        // TODO: update the code to test the property lineItemTotal
        expect(instance).to.have.property('lineItemTotal');
        // expect(instance.lineItemTotal).to.be(expectedValueLiteral);
      });

      it('should have the property requestedShipDate (base name: "requestedShipDate")', function() {
        // TODO: update the code to test the property requestedShipDate
        expect(instance).to.have.property('requestedShipDate');
        // expect(instance.requestedShipDate).to.be(expectedValueLiteral);
      });

      it('should have the property requestedInHandsDate (base name: "requestedInHandsDate")', function() {
        // TODO: update the code to test the property requestedInHandsDate
        expect(instance).to.have.property('requestedInHandsDate');
        // expect(instance.requestedInHandsDate).to.be(expectedValueLiteral);
      });

      it('should have the property referenceSalesQuote (base name: "referenceSalesQuote")', function() {
        // TODO: update the code to test the property referenceSalesQuote
        expect(instance).to.have.property('referenceSalesQuote');
        // expect(instance.referenceSalesQuote).to.be(expectedValueLiteral);
      });

      it('should have the property program (base name: "Program")', function() {
        // TODO: update the code to test the property program
        expect(instance).to.have.property('program');
        // expect(instance.program).to.be(expectedValueLiteral);
      });

      it('should have the property endCustomerSalesOrder (base name: "endCustomerSalesOrder")', function() {
        // TODO: update the code to test the property endCustomerSalesOrder
        expect(instance).to.have.property('endCustomerSalesOrder');
        // expect(instance.endCustomerSalesOrder).to.be(expectedValueLiteral);
      });

      it('should have the property productId (base name: "productId")', function() {
        // TODO: update the code to test the property productId
        expect(instance).to.have.property('productId');
        // expect(instance.productId).to.be(expectedValueLiteral);
      });

      it('should have the property customerProductId (base name: "customerProductId")', function() {
        // TODO: update the code to test the property customerProductId
        expect(instance).to.have.property('customerProductId');
        // expect(instance.customerProductId).to.be(expectedValueLiteral);
      });

      it('should have the property lineItemGroupingId (base name: "lineItemGroupingId")', function() {
        // TODO: update the code to test the property lineItemGroupingId
        expect(instance).to.have.property('lineItemGroupingId');
        // expect(instance.lineItemGroupingId).to.be(expectedValueLiteral);
      });

      it('should have the property partArray (base name: "PartArray")', function() {
        // TODO: update the code to test the property partArray
        expect(instance).to.have.property('partArray');
        // expect(instance.partArray).to.be(expectedValueLiteral);
      });

      it('should have the property configuration (base name: "Configuration")', function() {
        // TODO: update the code to test the property configuration
        expect(instance).to.have.property('configuration');
        // expect(instance.configuration).to.be(expectedValueLiteral);
      });

    });
  });

}));
