/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PsResTfulServiceApi);
  }
}(this, function(expect, PsResTfulServiceApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PsDomainModelOrderStatusV200OrderStatusDetail', function() {
      beforeEach(function() {
        instance = new PsResTfulServiceApi.PsDomainModelOrderStatusV200OrderStatusDetail();
      });

      it('should create an instance of PsDomainModelOrderStatusV200OrderStatusDetail', function() {
        // TODO: update the code to test PsDomainModelOrderStatusV200OrderStatusDetail
        expect(instance).to.be.a(PsResTfulServiceApi.PsDomainModelOrderStatusV200OrderStatusDetail);
      });

      it('should have the property salesOrderNumber (base name: "salesOrderNumber")', function() {
        // TODO: update the code to test the property salesOrderNumber
        expect(instance).to.have.property('salesOrderNumber');
        // expect(instance.salesOrderNumber).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property issueCategory (base name: "issueCategory")', function() {
        // TODO: update the code to test the property issueCategory
        expect(instance).to.have.property('issueCategory');
        // expect(instance.issueCategory).to.be(expectedValueLiteral);
      });

      it('should have the property expectedShipDate (base name: "expectedShipDate")', function() {
        // TODO: update the code to test the property expectedShipDate
        expect(instance).to.have.property('expectedShipDate');
        // expect(instance.expectedShipDate).to.be(expectedValueLiteral);
      });

      it('should have the property expectedDeliveryDate (base name: "expectedDeliveryDate")', function() {
        // TODO: update the code to test the property expectedDeliveryDate
        expect(instance).to.have.property('expectedDeliveryDate');
        // expect(instance.expectedDeliveryDate).to.be(expectedValueLiteral);
      });

      it('should have the property additionalExplanation (base name: "additionalExplanation")', function() {
        // TODO: update the code to test the property additionalExplanation
        expect(instance).to.have.property('additionalExplanation');
        // expect(instance.additionalExplanation).to.be(expectedValueLiteral);
      });

      it('should have the property qualityProofURL (base name: "qualityProofURL")', function() {
        // TODO: update the code to test the property qualityProofURL
        expect(instance).to.have.property('qualityProofURL');
        // expect(instance.qualityProofURL).to.be(expectedValueLiteral);
      });

      it('should have the property orderContactArray (base name: "OrderContactArray")', function() {
        // TODO: update the code to test the property orderContactArray
        expect(instance).to.have.property('orderContactArray');
        // expect(instance.orderContactArray).to.be(expectedValueLiteral);
      });

      it('should have the property productArray (base name: "ProductArray")', function() {
        // TODO: update the code to test the property productArray
        expect(instance).to.have.property('productArray');
        // expect(instance.productArray).to.be(expectedValueLiteral);
      });

      it('should have the property issueArray (base name: "IssueArray")', function() {
        // TODO: update the code to test the property issueArray
        expect(instance).to.have.property('issueArray');
        // expect(instance.issueArray).to.be(expectedValueLiteral);
      });

      it('should have the property validTimestamp (base name: "validTimestamp")', function() {
        // TODO: update the code to test the property validTimestamp
        expect(instance).to.have.property('validTimestamp');
        // expect(instance.validTimestamp).to.be(expectedValueLiteral);
      });

    });
  });

}));
