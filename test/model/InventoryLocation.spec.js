/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.psrestful);
  }
}(this, function(expect, psrestful) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InventoryLocation', function() {
      beforeEach(function() {
        instance = new psrestful.InventoryLocation();
      });

      it('should create an instance of InventoryLocation', function() {
        // TODO: update the code to test InventoryLocation
        expect(instance).to.be.a(psrestful.InventoryLocation);
      });

      it('should have the property inventoryLocationId (base name: "inventoryLocationId")', function() {
        // TODO: update the code to test the property inventoryLocationId
        expect(instance).to.have.property('inventoryLocationId');
        // expect(instance.inventoryLocationId).to.be(expectedValueLiteral);
      });

      it('should have the property inventoryLocationName (base name: "inventoryLocationName")', function() {
        // TODO: update the code to test the property inventoryLocationName
        expect(instance).to.have.property('inventoryLocationName');
        // expect(instance.inventoryLocationName).to.be(expectedValueLiteral);
      });

      it('should have the property postalCode (base name: "postalCode")', function() {
        // TODO: update the code to test the property postalCode
        expect(instance).to.have.property('postalCode');
        // expect(instance.postalCode).to.be(expectedValueLiteral);
      });

      it('should have the property country (base name: "country")', function() {
        // TODO: update the code to test the property country
        expect(instance).to.have.property('country');
        // expect(instance.country).to.be(expectedValueLiteral);
      });

      it('should have the property inventoryLocationQuantity (base name: "inventoryLocationQuantity")', function() {
        // TODO: update the code to test the property inventoryLocationQuantity
        expect(instance).to.have.property('inventoryLocationQuantity');
        // expect(instance.inventoryLocationQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property futureAvailabilityArray (base name: "FutureAvailabilityArray")', function() {
        // TODO: update the code to test the property futureAvailabilityArray
        expect(instance).to.have.property('futureAvailabilityArray');
        // expect(instance.futureAvailabilityArray).to.be(expectedValueLiteral);
      });

    });
  });

}));
