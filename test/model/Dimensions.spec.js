/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PsResTfulServiceApi);
  }
}(this, function(expect, PsResTfulServiceApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Dimensions', function() {
      beforeEach(function() {
        instance = new PsResTfulServiceApi.Dimensions();
      });

      it('should create an instance of Dimensions', function() {
        // TODO: update the code to test Dimensions
        expect(instance).to.be.a(PsResTfulServiceApi.Dimensions);
      });

      it('should have the property geometry (base name: "geometry")', function() {
        // TODO: update the code to test the property geometry
        expect(instance).to.have.property('geometry');
        // expect(instance.geometry).to.be(expectedValueLiteral);
      });

      it('should have the property useMaxLocationDimensions (base name: "useMaxLocationDimensions")', function() {
        // TODO: update the code to test the property useMaxLocationDimensions
        expect(instance).to.have.property('useMaxLocationDimensions');
        // expect(instance.useMaxLocationDimensions).to.be(expectedValueLiteral);
      });

      it('should have the property height (base name: "height")', function() {
        // TODO: update the code to test the property height
        expect(instance).to.have.property('height');
        // expect(instance.height).to.be(expectedValueLiteral);
      });

      it('should have the property width (base name: "width")', function() {
        // TODO: update the code to test the property width
        expect(instance).to.have.property('width');
        // expect(instance.width).to.be(expectedValueLiteral);
      });

      it('should have the property diameter (base name: "diameter")', function() {
        // TODO: update the code to test the property diameter
        expect(instance).to.have.property('diameter');
        // expect(instance.diameter).to.be(expectedValueLiteral);
      });

      it('should have the property uom (base name: "uom")', function() {
        // TODO: update the code to test the property uom
        expect(instance).to.have.property('uom');
        // expect(instance.uom).to.be(expectedValueLiteral);
      });

    });
  });

}));
