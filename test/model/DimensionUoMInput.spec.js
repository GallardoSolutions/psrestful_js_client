/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.psrestful);
  }
}(this, function(expect, psrestful) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DimensionUoMInput', function() {
      beforeEach(function() {
        instance = psrestful.DimensionUoMInput;
      });

      it('should create an instance of DimensionUoMInput', function() {
        // TODO: update the code to test DimensionUoMInput
        expect(instance).to.be.a('object');
      });

      it('should have the property ACRE', function() {
        expect(instance).to.have.property('ACRE');
        expect(instance.ACRE).to.be("ACRE");
      });

      it('should have the property ARES', function() {
        expect(instance).to.have.property('ARES');
        expect(instance.ARES).to.be("ARES");
      });

      it('should have the property CELI', function() {
        expect(instance).to.have.property('CELI');
        expect(instance.CELI).to.be("CELI");
      });

      it('should have the property CMET', function() {
        expect(instance).to.have.property('CMET');
        expect(instance.CMET).to.be("CMET");
      });

      it('should have the property FOOT', function() {
        expect(instance).to.have.property('FOOT');
        expect(instance.FOOT).to.be("FOOT");
      });

      it('should have the property GBGA', function() {
        expect(instance).to.have.property('GBGA');
        expect(instance.GBGA).to.be("GBGA");
      });

      it('should have the property GBOU', function() {
        expect(instance).to.have.property('GBOU');
        expect(instance.GBOU).to.be("GBOU");
      });

      it('should have the property GBPI', function() {
        expect(instance).to.have.property('GBPI');
        expect(instance.GBPI).to.be("GBPI");
      });

      it('should have the property GBQA', function() {
        expect(instance).to.have.property('GBQA');
        expect(instance.GBQA).to.be("GBQA");
      });

      it('should have the property GRAM', function() {
        expect(instance).to.have.property('GRAM');
        expect(instance.GRAM).to.be("GRAM");
      });

      it('should have the property HECT', function() {
        expect(instance).to.have.property('HECT');
        expect(instance.HECT).to.be("HECT");
      });

      it('should have the property INCH', function() {
        expect(instance).to.have.property('INCH');
        expect(instance.INCH).to.be("INCH");
      });

      it('should have the property KILO', function() {
        expect(instance).to.have.property('KILO');
        expect(instance.KILO).to.be("KILO");
      });

      it('should have the property KMET', function() {
        expect(instance).to.have.property('KMET');
        expect(instance.KMET).to.be("KMET");
      });

      it('should have the property LITR', function() {
        expect(instance).to.have.property('LITR');
        expect(instance.LITR).to.be("LITR");
      });

      it('should have the property METR', function() {
        expect(instance).to.have.property('METR');
        expect(instance.METR).to.be("METR");
      });

      it('should have the property MILE', function() {
        expect(instance).to.have.property('MILE');
        expect(instance.MILE).to.be("MILE");
      });

      it('should have the property MILI', function() {
        expect(instance).to.have.property('MILI');
        expect(instance.MILI).to.be("MILI");
      });

      it('should have the property MMET', function() {
        expect(instance).to.have.property('MMET');
        expect(instance.MMET).to.be("MMET");
      });

      it('should have the property PIEC', function() {
        expect(instance).to.have.property('PIEC');
        expect(instance.PIEC).to.be("PIEC");
      });

      it('should have the property PUND', function() {
        expect(instance).to.have.property('PUND');
        expect(instance.PUND).to.be("PUND");
      });

      it('should have the property SCMT', function() {
        expect(instance).to.have.property('SCMT');
        expect(instance.SCMT).to.be("SCMT");
      });

      it('should have the property SMET', function() {
        expect(instance).to.have.property('SMET');
        expect(instance.SMET).to.be("SMET");
      });

      it('should have the property SMIL', function() {
        expect(instance).to.have.property('SMIL');
        expect(instance.SMIL).to.be("SMIL");
      });

      it('should have the property SQFO', function() {
        expect(instance).to.have.property('SQFO');
        expect(instance.SQFO).to.be("SQFO");
      });

      it('should have the property SQIN', function() {
        expect(instance).to.have.property('SQIN');
        expect(instance.SQIN).to.be("SQIN");
      });

      it('should have the property SQKI', function() {
        expect(instance).to.have.property('SQKI');
        expect(instance.SQKI).to.be("SQKI");
      });

      it('should have the property SQMI', function() {
        expect(instance).to.have.property('SQMI');
        expect(instance.SQMI).to.be("SQMI");
      });

      it('should have the property SQYA', function() {
        expect(instance).to.have.property('SQYA');
        expect(instance.SQYA).to.be("SQYA");
      });

      it('should have the property TONS', function() {
        expect(instance).to.have.property('TONS');
        expect(instance.TONS).to.be("TONS");
      });

      it('should have the property USGA', function() {
        expect(instance).to.have.property('USGA');
        expect(instance.USGA).to.be("USGA");
      });

      it('should have the property USOU', function() {
        expect(instance).to.have.property('USOU');
        expect(instance.USOU).to.be("USOU");
      });

      it('should have the property USPI', function() {
        expect(instance).to.have.property('USPI');
        expect(instance.USPI).to.be("USPI");
      });

      it('should have the property USGA', function() {
        expect(instance).to.have.property('USGA');
        expect(instance.USGA).to.be("USGA");
      });

      it('should have the property YARD', function() {
        expect(instance).to.have.property('YARD');
        expect(instance.YARD).to.be("YARD");
      });

    });
  });

}));
