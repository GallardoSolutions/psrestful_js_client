/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.psrestful);
  }
}(this, function(expect, psrestful) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PsDomainModelOrderStatusV100OrderStatusDetail', function() {
      beforeEach(function() {
        instance = new psrestful.PsDomainModelOrderStatusV100OrderStatusDetail();
      });

      it('should create an instance of PsDomainModelOrderStatusV100OrderStatusDetail', function() {
        // TODO: update the code to test PsDomainModelOrderStatusV100OrderStatusDetail
        expect(instance).to.be.a(psrestful.PsDomainModelOrderStatusV100OrderStatusDetail);
      });

      it('should have the property factoryOrderNumber (base name: "factoryOrderNumber")', function() {
        // TODO: update the code to test the property factoryOrderNumber
        expect(instance).to.have.property('factoryOrderNumber');
        // expect(instance.factoryOrderNumber).to.be(expectedValueLiteral);
      });

      it('should have the property statusID (base name: "statusID")', function() {
        // TODO: update the code to test the property statusID
        expect(instance).to.have.property('statusID');
        // expect(instance.statusID).to.be(expectedValueLiteral);
      });

      it('should have the property statusName (base name: "statusName")', function() {
        // TODO: update the code to test the property statusName
        expect(instance).to.have.property('statusName');
        // expect(instance.statusName).to.be(expectedValueLiteral);
      });

      it('should have the property responseRequired (base name: "responseRequired")', function() {
        // TODO: update the code to test the property responseRequired
        expect(instance).to.have.property('responseRequired');
        // expect(instance.responseRequired).to.be(expectedValueLiteral);
      });

      it('should have the property validTimestamp (base name: "validTimestamp")', function() {
        // TODO: update the code to test the property validTimestamp
        expect(instance).to.have.property('validTimestamp');
        // expect(instance.validTimestamp).to.be(expectedValueLiteral);
      });

      it('should have the property expectedShipDate (base name: "expectedShipDate")', function() {
        // TODO: update the code to test the property expectedShipDate
        expect(instance).to.have.property('expectedShipDate');
        // expect(instance.expectedShipDate).to.be(expectedValueLiteral);
      });

      it('should have the property expectedDeliveryDate (base name: "expectedDeliveryDate")', function() {
        // TODO: update the code to test the property expectedDeliveryDate
        expect(instance).to.have.property('expectedDeliveryDate');
        // expect(instance.expectedDeliveryDate).to.be(expectedValueLiteral);
      });

      it('should have the property responseToArray (base name: "ResponseToArray")', function() {
        // TODO: update the code to test the property responseToArray
        expect(instance).to.have.property('responseToArray');
        // expect(instance.responseToArray).to.be(expectedValueLiteral);
      });

      it('should have the property additionalExplanation (base name: "additionalExplanation")', function() {
        // TODO: update the code to test the property additionalExplanation
        expect(instance).to.have.property('additionalExplanation');
        // expect(instance.additionalExplanation).to.be(expectedValueLiteral);
      });

    });
  });

}));
