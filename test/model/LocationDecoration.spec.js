/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PsResTfulServiceApi);
  }
}(this, function(expect, PsResTfulServiceApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('LocationDecoration', function() {
      beforeEach(function() {
        instance = new PsResTfulServiceApi.LocationDecoration();
      });

      it('should create an instance of LocationDecoration', function() {
        // TODO: update the code to test LocationDecoration
        expect(instance).to.be.a(PsResTfulServiceApi.LocationDecoration);
      });

      it('should have the property locationName (base name: "locationName")', function() {
        // TODO: update the code to test the property locationName
        expect(instance).to.have.property('locationName');
        // expect(instance.locationName).to.be(expectedValueLiteral);
      });

      it('should have the property maxImprintColors (base name: "maxImprintColors")', function() {
        // TODO: update the code to test the property maxImprintColors
        expect(instance).to.have.property('maxImprintColors');
        // expect(instance.maxImprintColors).to.be(expectedValueLiteral);
      });

      it('should have the property decorationName (base name: "decorationName")', function() {
        // TODO: update the code to test the property decorationName
        expect(instance).to.have.property('decorationName');
        // expect(instance.decorationName).to.be(expectedValueLiteral);
      });

      it('should have the property locationDecorationComboDefault (base name: "locationDecorationComboDefault")', function() {
        // TODO: update the code to test the property locationDecorationComboDefault
        expect(instance).to.have.property('locationDecorationComboDefault');
        // expect(instance.locationDecorationComboDefault).to.be(expectedValueLiteral);
      });

      it('should have the property priceIncludes (base name: "priceIncludes")', function() {
        // TODO: update the code to test the property priceIncludes
        expect(instance).to.have.property('priceIncludes');
        // expect(instance.priceIncludes).to.be(expectedValueLiteral);
      });

    });
  });

}));
