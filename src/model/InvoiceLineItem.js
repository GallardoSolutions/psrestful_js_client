/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The InvoiceLineItem model module.
 * @module model/InvoiceLineItem
 * @version 0.0.1
 */
export default class InvoiceLineItem {
  /**
   * Constructs a new <code>InvoiceLineItem</code>.
   * Field       Description     Data Type       Required invoiceLineItemNumber       The line item number of the line item   DOUBLE  FALSE productId   The productId when the line item applies to a product.  64 STRING       FALSE partId      The partId when the line item applies to a product.     64 STRING       FALSE chargeId    The chargeId when the line item applies to a charge.    64 STRING       TRUE purchaseOrderLineItemNumber The line item number of the purchase order that the invoice references  64 STRING       FALSE # noqa orderedQuantity     The quantity ordered by the referenced purchase order   DOUBLE  FALSE invoiceQuantity     The quantity of the line item invoiced. DOUBLE  TRUE backOrderedQuantity The quantity of the line item backordered.      DOUBLE  FALSE quantityUOM The unit of measure of the orderQuantity, invoicedQuantity, and backOrderedQuantity     2 STRING FACIT  TRUE # noqa lineItemDescription A textual description of the line item  1024 STRING     TRUE unitPrice   The price of the unit in the currency of the purchase order     DOUBLE  TRUE discountAmount      An amount of discount applied to the item.      DOUBLE  FALSE extendedPrice       \&quot;The extended price for the line item  Note: extendedPrice &#x3D; (unitPrice * invoicedQuantity) - discountAmount\&quot;      DOUBLE  TRUE distributorProductId        The distributor’s productId for the item when the line item applies to a product.       64 STRING       FALSE  # noqa distributorPartId   The distributor’s partId for the item when the line item applies to a product.  64 STRING       FALSE  # noqa
   * @alias module:model/InvoiceLineItem
   * @class
   * @param invoiceLineItemNumber {Object} 
   * @param productId {Object} 
   * @param partId {Object} 
   * @param chargeId {Object} 
   * @param purchaseOrderLineItemNumber {Object} 
   * @param orderedQuantity {Object} 
   * @param invoiceQuantity {Object} 
   * @param backOrderedQuantity {Object} 
   * @param quantityUOM {Object} 
   * @param lineItemDescription {Object} 
   * @param unitPrice {Object} 
   * @param discountAmount {Object} 
   * @param extendedPrice {Object} 
   * @param distributorProductId {Object} 
   * @param distributorPartId {Object} 
   */
  constructor(invoiceLineItemNumber, productId, partId, chargeId, purchaseOrderLineItemNumber, orderedQuantity, invoiceQuantity, backOrderedQuantity, quantityUOM, lineItemDescription, unitPrice, discountAmount, extendedPrice, distributorProductId, distributorPartId) {
    this.invoiceLineItemNumber = invoiceLineItemNumber;
    this.productId = productId;
    this.partId = partId;
    this.chargeId = chargeId;
    this.purchaseOrderLineItemNumber = purchaseOrderLineItemNumber;
    this.orderedQuantity = orderedQuantity;
    this.invoiceQuantity = invoiceQuantity;
    this.backOrderedQuantity = backOrderedQuantity;
    this.quantityUOM = quantityUOM;
    this.lineItemDescription = lineItemDescription;
    this.unitPrice = unitPrice;
    this.discountAmount = discountAmount;
    this.extendedPrice = extendedPrice;
    this.distributorProductId = distributorProductId;
    this.distributorPartId = distributorPartId;
  }

  /**
   * Constructs a <code>InvoiceLineItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InvoiceLineItem} obj Optional instance to populate.
   * @return {module:model/InvoiceLineItem} The populated <code>InvoiceLineItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InvoiceLineItem();
      if (data.hasOwnProperty('invoiceLineItemNumber'))
        obj.invoiceLineItemNumber = ApiClient.convertToType(data['invoiceLineItemNumber'], Object);
      if (data.hasOwnProperty('productId'))
        obj.productId = ApiClient.convertToType(data['productId'], Object);
      if (data.hasOwnProperty('partId'))
        obj.partId = ApiClient.convertToType(data['partId'], Object);
      if (data.hasOwnProperty('chargeId'))
        obj.chargeId = ApiClient.convertToType(data['chargeId'], Object);
      if (data.hasOwnProperty('purchaseOrderLineItemNumber'))
        obj.purchaseOrderLineItemNumber = ApiClient.convertToType(data['purchaseOrderLineItemNumber'], Object);
      if (data.hasOwnProperty('orderedQuantity'))
        obj.orderedQuantity = ApiClient.convertToType(data['orderedQuantity'], Object);
      if (data.hasOwnProperty('invoiceQuantity'))
        obj.invoiceQuantity = ApiClient.convertToType(data['invoiceQuantity'], Object);
      if (data.hasOwnProperty('backOrderedQuantity'))
        obj.backOrderedQuantity = ApiClient.convertToType(data['backOrderedQuantity'], Object);
      if (data.hasOwnProperty('quantityUOM'))
        obj.quantityUOM = ApiClient.convertToType(data['quantityUOM'], Object);
      if (data.hasOwnProperty('lineItemDescription'))
        obj.lineItemDescription = ApiClient.convertToType(data['lineItemDescription'], Object);
      if (data.hasOwnProperty('unitPrice'))
        obj.unitPrice = ApiClient.convertToType(data['unitPrice'], Object);
      if (data.hasOwnProperty('discountAmount'))
        obj.discountAmount = ApiClient.convertToType(data['discountAmount'], Object);
      if (data.hasOwnProperty('extendedPrice'))
        obj.extendedPrice = ApiClient.convertToType(data['extendedPrice'], Object);
      if (data.hasOwnProperty('distributorProductId'))
        obj.distributorProductId = ApiClient.convertToType(data['distributorProductId'], Object);
      if (data.hasOwnProperty('distributorPartId'))
        obj.distributorPartId = ApiClient.convertToType(data['distributorPartId'], Object);
    }
    return obj;
  }
}

/**
 * @member {Object} invoiceLineItemNumber
 */
InvoiceLineItem.prototype.invoiceLineItemNumber = undefined;

/**
 * @member {Object} productId
 */
InvoiceLineItem.prototype.productId = undefined;

/**
 * @member {Object} partId
 */
InvoiceLineItem.prototype.partId = undefined;

/**
 * @member {Object} chargeId
 */
InvoiceLineItem.prototype.chargeId = undefined;

/**
 * @member {Object} purchaseOrderLineItemNumber
 */
InvoiceLineItem.prototype.purchaseOrderLineItemNumber = undefined;

/**
 * @member {Object} orderedQuantity
 */
InvoiceLineItem.prototype.orderedQuantity = undefined;

/**
 * @member {Object} invoiceQuantity
 */
InvoiceLineItem.prototype.invoiceQuantity = undefined;

/**
 * @member {Object} backOrderedQuantity
 */
InvoiceLineItem.prototype.backOrderedQuantity = undefined;

/**
 * @member {Object} quantityUOM
 */
InvoiceLineItem.prototype.quantityUOM = undefined;

/**
 * @member {Object} lineItemDescription
 */
InvoiceLineItem.prototype.lineItemDescription = undefined;

/**
 * @member {Object} unitPrice
 */
InvoiceLineItem.prototype.unitPrice = undefined;

/**
 * @member {Object} discountAmount
 */
InvoiceLineItem.prototype.discountAmount = undefined;

/**
 * @member {Object} extendedPrice
 */
InvoiceLineItem.prototype.extendedPrice = undefined;

/**
 * @member {Object} distributorProductId
 */
InvoiceLineItem.prototype.distributorProductId = undefined;

/**
 * @member {Object} distributorPartId
 */
InvoiceLineItem.prototype.distributorPartId = undefined;

