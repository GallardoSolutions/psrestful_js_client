/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import ClassTypeArray from './ClassTypeArray';

/**
 * The MediaContent model module.
 * @module model/MediaContent
 * @version 0.0.1
 */
export default class MediaContent {
  /**
   * Constructs a new <code>MediaContent</code>.
   * @alias module:model/MediaContent
   * @class
   * @param productId {Object} 
   * @param partId {Object} 
   * @param url {Object} 
   * @param mediaType {Object} 
   * @param fileSize {Object} 
   * @param width {Object} 
   * @param height {Object} 
   * @param dpi {Object} 
   * @param color {Object} 
   * @param description {Object} 
   * @param singlePart {Object} 
   * @param changeTimeStamp {Object} 
   * @param classTypeArray {module:model/ClassTypeArray} 
   * @param decorationArray {Object} 
   * @param locationArray {Object} 
   */
  constructor(productId, partId, url, mediaType, fileSize, width, height, dpi, color, description, singlePart, changeTimeStamp, classTypeArray, decorationArray, locationArray) {
    this.productId = productId;
    this.partId = partId;
    this.url = url;
    this.mediaType = mediaType;
    this.fileSize = fileSize;
    this.width = width;
    this.height = height;
    this.dpi = dpi;
    this.color = color;
    this.description = description;
    this.singlePart = singlePart;
    this.changeTimeStamp = changeTimeStamp;
    this.classTypeArray = classTypeArray;
    this.decorationArray = decorationArray;
    this.locationArray = locationArray;
  }

  /**
   * Constructs a <code>MediaContent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MediaContent} obj Optional instance to populate.
   * @return {module:model/MediaContent} The populated <code>MediaContent</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MediaContent();
      if (data.hasOwnProperty('productId'))
        obj.productId = ApiClient.convertToType(data['productId'], Object);
      if (data.hasOwnProperty('partId'))
        obj.partId = ApiClient.convertToType(data['partId'], Object);
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], Object);
      if (data.hasOwnProperty('mediaType'))
        obj.mediaType = ApiClient.convertToType(data['mediaType'], Object);
      if (data.hasOwnProperty('fileSize'))
        obj.fileSize = ApiClient.convertToType(data['fileSize'], Object);
      if (data.hasOwnProperty('width'))
        obj.width = ApiClient.convertToType(data['width'], Object);
      if (data.hasOwnProperty('height'))
        obj.height = ApiClient.convertToType(data['height'], Object);
      if (data.hasOwnProperty('dpi'))
        obj.dpi = ApiClient.convertToType(data['dpi'], Object);
      if (data.hasOwnProperty('color'))
        obj.color = ApiClient.convertToType(data['color'], Object);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], Object);
      if (data.hasOwnProperty('singlePart'))
        obj.singlePart = ApiClient.convertToType(data['singlePart'], Object);
      if (data.hasOwnProperty('changeTimeStamp'))
        obj.changeTimeStamp = ApiClient.convertToType(data['changeTimeStamp'], Object);
      if (data.hasOwnProperty('ClassTypeArray'))
        obj.classTypeArray = ClassTypeArray.constructFromObject(data['ClassTypeArray']);
      if (data.hasOwnProperty('DecorationArray'))
        obj.decorationArray = ApiClient.convertToType(data['DecorationArray'], Object);
      if (data.hasOwnProperty('LocationArray'))
        obj.locationArray = ApiClient.convertToType(data['LocationArray'], Object);
    }
    return obj;
  }
}

/**
 * @member {Object} productId
 */
MediaContent.prototype.productId = undefined;

/**
 * @member {Object} partId
 */
MediaContent.prototype.partId = undefined;

/**
 * @member {Object} url
 */
MediaContent.prototype.url = undefined;

/**
 * @member {Object} mediaType
 */
MediaContent.prototype.mediaType = undefined;

/**
 * @member {Object} fileSize
 */
MediaContent.prototype.fileSize = undefined;

/**
 * @member {Object} width
 */
MediaContent.prototype.width = undefined;

/**
 * @member {Object} height
 */
MediaContent.prototype.height = undefined;

/**
 * @member {Object} dpi
 */
MediaContent.prototype.dpi = undefined;

/**
 * @member {Object} color
 */
MediaContent.prototype.color = undefined;

/**
 * @member {Object} description
 */
MediaContent.prototype.description = undefined;

/**
 * @member {Object} singlePart
 */
MediaContent.prototype.singlePart = undefined;

/**
 * @member {Object} changeTimeStamp
 */
MediaContent.prototype.changeTimeStamp = undefined;

/**
 * @member {module:model/ClassTypeArray} classTypeArray
 */
MediaContent.prototype.classTypeArray = undefined;

/**
 * @member {Object} decorationArray
 */
MediaContent.prototype.decorationArray = undefined;

/**
 * @member {Object} locationArray
 */
MediaContent.prototype.locationArray = undefined;

