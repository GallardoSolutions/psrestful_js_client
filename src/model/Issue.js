/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import IssueStatus from './IssueStatus';

/**
 * The Issue model module.
 * @module model/Issue
 * @version 0.0.1
 */
export default class Issue {
  /**
   * Constructs a new <code>Issue</code>.
   * @alias module:model/Issue
   * @class
   * @param issueId {Object} 
   * @param issueStatus {module:model/IssueStatus} 
   * @param issueCategory {Object} 
   * @param issueName {Object} 
   * @param urgentResponseRequired {Object} 
   * @param issueDescription {Object} 
   * @param responseRequiredBy {Object} 
   * @param issueResolutionURL {Object} 
   * @param issueBlockingStatus {Object} 
   */
  constructor(issueId, issueStatus, issueCategory, issueName, urgentResponseRequired, issueDescription, responseRequiredBy, issueResolutionURL, issueBlockingStatus) {
    this.issueId = issueId;
    this.issueStatus = issueStatus;
    this.issueCategory = issueCategory;
    this.issueName = issueName;
    this.urgentResponseRequired = urgentResponseRequired;
    this.issueDescription = issueDescription;
    this.responseRequiredBy = responseRequiredBy;
    this.issueResolutionURL = issueResolutionURL;
    this.issueBlockingStatus = issueBlockingStatus;
  }

  /**
   * Constructs a <code>Issue</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Issue} obj Optional instance to populate.
   * @return {module:model/Issue} The populated <code>Issue</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Issue();
      if (data.hasOwnProperty('issueId'))
        obj.issueId = ApiClient.convertToType(data['issueId'], Object);
      if (data.hasOwnProperty('issueStatus'))
        obj.issueStatus = IssueStatus.constructFromObject(data['issueStatus']);
      if (data.hasOwnProperty('issueCategory'))
        obj.issueCategory = ApiClient.convertToType(data['issueCategory'], Object);
      if (data.hasOwnProperty('issueName'))
        obj.issueName = ApiClient.convertToType(data['issueName'], Object);
      if (data.hasOwnProperty('urgentResponseRequired'))
        obj.urgentResponseRequired = ApiClient.convertToType(data['urgentResponseRequired'], Object);
      if (data.hasOwnProperty('issueDescription'))
        obj.issueDescription = ApiClient.convertToType(data['issueDescription'], Object);
      if (data.hasOwnProperty('responseRequiredBy'))
        obj.responseRequiredBy = ApiClient.convertToType(data['responseRequiredBy'], Object);
      if (data.hasOwnProperty('issueResolutionURL'))
        obj.issueResolutionURL = ApiClient.convertToType(data['issueResolutionURL'], Object);
      if (data.hasOwnProperty('issueBlockingStatus'))
        obj.issueBlockingStatus = ApiClient.convertToType(data['issueBlockingStatus'], Object);
      if (data.hasOwnProperty('ContactArray'))
        obj.contactArray = ApiClient.convertToType(data['ContactArray'], Object);
      if (data.hasOwnProperty('productId'))
        obj.productId = ApiClient.convertToType(data['productId'], Object);
      if (data.hasOwnProperty('ResolutionArray'))
        obj.resolutionArray = ApiClient.convertToType(data['ResolutionArray'], Object);
    }
    return obj;
  }
}

/**
 * @member {Object} issueId
 */
Issue.prototype.issueId = undefined;

/**
 * @member {module:model/IssueStatus} issueStatus
 */
Issue.prototype.issueStatus = undefined;

/**
 * @member {Object} issueCategory
 */
Issue.prototype.issueCategory = undefined;

/**
 * @member {Object} issueName
 */
Issue.prototype.issueName = undefined;

/**
 * @member {Object} urgentResponseRequired
 */
Issue.prototype.urgentResponseRequired = undefined;

/**
 * @member {Object} issueDescription
 */
Issue.prototype.issueDescription = undefined;

/**
 * @member {Object} responseRequiredBy
 */
Issue.prototype.responseRequiredBy = undefined;

/**
 * @member {Object} issueResolutionURL
 */
Issue.prototype.issueResolutionURL = undefined;

/**
 * @member {Object} issueBlockingStatus
 */
Issue.prototype.issueBlockingStatus = undefined;

/**
 * @member {Object} contactArray
 */
Issue.prototype.contactArray = undefined;

/**
 * @member {Object} productId
 */
Issue.prototype.productId = undefined;

/**
 * @member {Object} resolutionArray
 */
Issue.prototype.resolutionArray = undefined;

