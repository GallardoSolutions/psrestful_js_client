/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The DecorationColors model module.
 * @module model/DecorationColors
 * @version 0.0.1
 */
export default class DecorationColors {
  /**
   * Constructs a new <code>DecorationColors</code>.
   * @alias module:model/DecorationColors
   * @class
   * @param productId {Object} 
   * @param locationId {Object} 
   * @param pmsMatch {Object} 
   * @param fullColor {Object} Set to true if the decoration method is full color process; False implies that number of colors is irrelevant
   * @param colorArray {Object} 
   * @param decorationMethodArray {Object} 
   */
  constructor(productId, locationId, pmsMatch, fullColor, colorArray, decorationMethodArray) {
    this.productId = productId;
    this.locationId = locationId;
    this.pmsMatch = pmsMatch;
    this.fullColor = fullColor;
    this.colorArray = colorArray;
    this.decorationMethodArray = decorationMethodArray;
  }

  /**
   * Constructs a <code>DecorationColors</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DecorationColors} obj Optional instance to populate.
   * @return {module:model/DecorationColors} The populated <code>DecorationColors</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DecorationColors();
      if (data.hasOwnProperty('productId'))
        obj.productId = ApiClient.convertToType(data['productId'], Object);
      if (data.hasOwnProperty('locationId'))
        obj.locationId = ApiClient.convertToType(data['locationId'], Object);
      if (data.hasOwnProperty('pmsMatch'))
        obj.pmsMatch = ApiClient.convertToType(data['pmsMatch'], Object);
      if (data.hasOwnProperty('fullColor'))
        obj.fullColor = ApiClient.convertToType(data['fullColor'], Object);
      if (data.hasOwnProperty('ColorArray'))
        obj.colorArray = ApiClient.convertToType(data['ColorArray'], Object);
      if (data.hasOwnProperty('DecorationMethodArray'))
        obj.decorationMethodArray = ApiClient.convertToType(data['DecorationMethodArray'], Object);
    }
    return obj;
  }
}

/**
 * @member {Object} productId
 */
DecorationColors.prototype.productId = undefined;

/**
 * @member {Object} locationId
 */
DecorationColors.prototype.locationId = undefined;

/**
 * @member {Object} pmsMatch
 */
DecorationColors.prototype.pmsMatch = undefined;

/**
 * Set to true if the decoration method is full color process; False implies that number of colors is irrelevant
 * @member {Object} fullColor
 */
DecorationColors.prototype.fullColor = undefined;

/**
 * @member {Object} colorArray
 */
DecorationColors.prototype.colorArray = undefined;

/**
 * @member {Object} decorationMethodArray
 */
DecorationColors.prototype.decorationMethodArray = undefined;

