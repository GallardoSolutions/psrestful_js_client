/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The ProductPart model module.
 * @module model/ProductPart
 * @version 0.0.1
 */
export default class ProductPart {
  /**
   * Constructs a new <code>ProductPart</code>.
   * @alias module:model/ProductPart
   * @class
   * @param partId {Object} 
   * @param description {Object} 
   * @param countryOfOrigin {Object} 
   * @param primaryMaterial {Object} 
   * @param shape {Object} 
   * @param apparelSize {Object} 
   * @param dimension {Object} 
   * @param leadTime {Object} 
   * @param unspsc {Object} 
   * @param gtin {Object} 
   * @param isRushService {Object} 
   * @param endDate {Object} 
   * @param effectiveDate {Object} 
   * @param isCloseout {Object} 
   * @param isCaution {Object} 
   * @param cautionComment {Object} 
   * @param nmfcCode {Object} 
   * @param nmfcDescription {Object} 
   * @param nmfcNumber {Object} 
   * @param isOnDemand {Object} 
   * @param isHazmat {Object} 
   * @param colorArray {Object} 
   * @param productPackagingArray {Object} 
   * @param shippingPackageArray {Object} 
   */
  constructor(partId, description, countryOfOrigin, primaryMaterial, shape, apparelSize, dimension, leadTime, unspsc, gtin, isRushService, endDate, effectiveDate, isCloseout, isCaution, cautionComment, nmfcCode, nmfcDescription, nmfcNumber, isOnDemand, isHazmat, colorArray, productPackagingArray, shippingPackageArray) {
    this.partId = partId;
    this.description = description;
    this.countryOfOrigin = countryOfOrigin;
    this.primaryMaterial = primaryMaterial;
    this.shape = shape;
    this.apparelSize = apparelSize;
    this.dimension = dimension;
    this.leadTime = leadTime;
    this.unspsc = unspsc;
    this.gtin = gtin;
    this.isRushService = isRushService;
    this.endDate = endDate;
    this.effectiveDate = effectiveDate;
    this.isCloseout = isCloseout;
    this.isCaution = isCaution;
    this.cautionComment = cautionComment;
    this.nmfcCode = nmfcCode;
    this.nmfcDescription = nmfcDescription;
    this.nmfcNumber = nmfcNumber;
    this.isOnDemand = isOnDemand;
    this.isHazmat = isHazmat;
    this.colorArray = colorArray;
    this.productPackagingArray = productPackagingArray;
    this.shippingPackageArray = shippingPackageArray;
  }

  /**
   * Constructs a <code>ProductPart</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProductPart} obj Optional instance to populate.
   * @return {module:model/ProductPart} The populated <code>ProductPart</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProductPart();
      if (data.hasOwnProperty('partId'))
        obj.partId = ApiClient.convertToType(data['partId'], Object);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], Object);
      if (data.hasOwnProperty('countryOfOrigin'))
        obj.countryOfOrigin = ApiClient.convertToType(data['countryOfOrigin'], Object);
      if (data.hasOwnProperty('primaryMaterial'))
        obj.primaryMaterial = ApiClient.convertToType(data['primaryMaterial'], Object);
      if (data.hasOwnProperty('shape'))
        obj.shape = ApiClient.convertToType(data['shape'], Object);
      if (data.hasOwnProperty('ApparelSize'))
        obj.apparelSize = ApiClient.convertToType(data['ApparelSize'], Object);
      if (data.hasOwnProperty('Dimension'))
        obj.dimension = ApiClient.convertToType(data['Dimension'], Object);
      if (data.hasOwnProperty('leadTime'))
        obj.leadTime = ApiClient.convertToType(data['leadTime'], Object);
      if (data.hasOwnProperty('unspsc'))
        obj.unspsc = ApiClient.convertToType(data['unspsc'], Object);
      if (data.hasOwnProperty('gtin'))
        obj.gtin = ApiClient.convertToType(data['gtin'], Object);
      if (data.hasOwnProperty('isRushService'))
        obj.isRushService = ApiClient.convertToType(data['isRushService'], Object);
      if (data.hasOwnProperty('endDate'))
        obj.endDate = ApiClient.convertToType(data['endDate'], Object);
      if (data.hasOwnProperty('effectiveDate'))
        obj.effectiveDate = ApiClient.convertToType(data['effectiveDate'], Object);
      if (data.hasOwnProperty('isCloseout'))
        obj.isCloseout = ApiClient.convertToType(data['isCloseout'], Object);
      if (data.hasOwnProperty('isCaution'))
        obj.isCaution = ApiClient.convertToType(data['isCaution'], Object);
      if (data.hasOwnProperty('cautionComment'))
        obj.cautionComment = ApiClient.convertToType(data['cautionComment'], Object);
      if (data.hasOwnProperty('nmfcCode'))
        obj.nmfcCode = ApiClient.convertToType(data['nmfcCode'], Object);
      if (data.hasOwnProperty('nmfcDescription'))
        obj.nmfcDescription = ApiClient.convertToType(data['nmfcDescription'], Object);
      if (data.hasOwnProperty('nmfcNumber'))
        obj.nmfcNumber = ApiClient.convertToType(data['nmfcNumber'], Object);
      if (data.hasOwnProperty('isOnDemand'))
        obj.isOnDemand = ApiClient.convertToType(data['isOnDemand'], Object);
      if (data.hasOwnProperty('isHazmat'))
        obj.isHazmat = ApiClient.convertToType(data['isHazmat'], Object);
      if (data.hasOwnProperty('primaryColor'))
        obj.primaryColor = ApiClient.convertToType(data['primaryColor'], Object);
      if (data.hasOwnProperty('ColorArray'))
        obj.colorArray = ApiClient.convertToType(data['ColorArray'], Object);
      if (data.hasOwnProperty('ProductPackagingArray'))
        obj.productPackagingArray = ApiClient.convertToType(data['ProductPackagingArray'], Object);
      if (data.hasOwnProperty('ShippingPackageArray'))
        obj.shippingPackageArray = ApiClient.convertToType(data['ShippingPackageArray'], Object);
    }
    return obj;
  }
}

/**
 * @member {Object} partId
 */
ProductPart.prototype.partId = undefined;

/**
 * @member {Object} description
 */
ProductPart.prototype.description = undefined;

/**
 * @member {Object} countryOfOrigin
 */
ProductPart.prototype.countryOfOrigin = undefined;

/**
 * @member {Object} primaryMaterial
 */
ProductPart.prototype.primaryMaterial = undefined;

/**
 * @member {Object} shape
 */
ProductPart.prototype.shape = undefined;

/**
 * @member {Object} apparelSize
 */
ProductPart.prototype.apparelSize = undefined;

/**
 * @member {Object} dimension
 */
ProductPart.prototype.dimension = undefined;

/**
 * @member {Object} leadTime
 */
ProductPart.prototype.leadTime = undefined;

/**
 * @member {Object} unspsc
 */
ProductPart.prototype.unspsc = undefined;

/**
 * @member {Object} gtin
 */
ProductPart.prototype.gtin = undefined;

/**
 * @member {Object} isRushService
 */
ProductPart.prototype.isRushService = undefined;

/**
 * @member {Object} endDate
 */
ProductPart.prototype.endDate = undefined;

/**
 * @member {Object} effectiveDate
 */
ProductPart.prototype.effectiveDate = undefined;

/**
 * @member {Object} isCloseout
 */
ProductPart.prototype.isCloseout = undefined;

/**
 * @member {Object} isCaution
 */
ProductPart.prototype.isCaution = undefined;

/**
 * @member {Object} cautionComment
 */
ProductPart.prototype.cautionComment = undefined;

/**
 * @member {Object} nmfcCode
 */
ProductPart.prototype.nmfcCode = undefined;

/**
 * @member {Object} nmfcDescription
 */
ProductPart.prototype.nmfcDescription = undefined;

/**
 * @member {Object} nmfcNumber
 */
ProductPart.prototype.nmfcNumber = undefined;

/**
 * @member {Object} isOnDemand
 */
ProductPart.prototype.isOnDemand = undefined;

/**
 * @member {Object} isHazmat
 */
ProductPart.prototype.isHazmat = undefined;

/**
 * @member {Object} primaryColor
 */
ProductPart.prototype.primaryColor = undefined;

/**
 * @member {Object} colorArray
 */
ProductPart.prototype.colorArray = undefined;

/**
 * @member {Object} productPackagingArray
 */
ProductPart.prototype.productPackagingArray = undefined;

/**
 * @member {Object} shippingPackageArray
 */
ProductPart.prototype.shippingPackageArray = undefined;

