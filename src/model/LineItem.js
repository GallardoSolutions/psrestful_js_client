/*
 * PS RESTful Service API
 * A proxy service for PromoStandards SOAP to a REST API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import LineType from './LineType';
import ToleranceDetails from './ToleranceDetails';

/**
 * The LineItem model module.
 * @module model/LineItem
 * @version 0.0.1
 */
export default class LineItem {
  /**
   * Constructs a new <code>LineItem</code>.
   * @alias module:model/LineItem
   * @class
   * @param lineNumber {Object} 
   * @param description {Object} 
   * @param lineType {module:model/LineType} 
   * @param quantity {Object} 
   * @param fobId {Object} Used to indicate the FOB point.  Use fobId from the supplier’s Product Pricing and Configuration Service to populate this information
   * @param toleranceDetails {module:model/ToleranceDetails} 
   * @param allowPartialShipments {Object} 
   * @param unitPrice {Object} 
   * @param lineItemTotal {Object} 
   * @param requestedShipDate {Object} The date the line item is requested to ship from the FOB point
   * @param requestedInHandsDate {Object} The date the line item is requested to arrive at the shipping destination
   * @param referenceSalesQuote {Object} The sales quote number associated with this purchase order line (if applicable)
   * @param program {Object} 
   * @param endCustomerSalesOrder {Object} The distributor’s order number provided to the end customer
   * @param productId {Object} The manufacturer’s product id associated with the configuration data
   * @param customerProductId {Object} The distributor’s product id
   * @param lineItemGroupingId {Object} An identifier that allows configuration data to be spread out among multiple purchase order lines. Keep `lineItemGroupingID` unique when referencing the same product on the purchase order.  Any change to the product, location, decoration, or artwork should produce a unique `lineItemGroupingID` to the purchase order
   * @param partArray {Object} 
   * @param configuration {Object} 
   */
  constructor(lineNumber, description, lineType, quantity, fobId, toleranceDetails, allowPartialShipments, unitPrice, lineItemTotal, requestedShipDate, requestedInHandsDate, referenceSalesQuote, program, endCustomerSalesOrder, productId, customerProductId, lineItemGroupingId, partArray, configuration) {
    this.lineNumber = lineNumber;
    this.description = description;
    this.lineType = lineType;
    this.quantity = quantity;
    this.fobId = fobId;
    this.toleranceDetails = toleranceDetails;
    this.allowPartialShipments = allowPartialShipments;
    this.unitPrice = unitPrice;
    this.lineItemTotal = lineItemTotal;
    this.requestedShipDate = requestedShipDate;
    this.requestedInHandsDate = requestedInHandsDate;
    this.referenceSalesQuote = referenceSalesQuote;
    this.program = program;
    this.endCustomerSalesOrder = endCustomerSalesOrder;
    this.productId = productId;
    this.customerProductId = customerProductId;
    this.lineItemGroupingId = lineItemGroupingId;
    this.partArray = partArray;
    this.configuration = configuration;
  }

  /**
   * Constructs a <code>LineItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LineItem} obj Optional instance to populate.
   * @return {module:model/LineItem} The populated <code>LineItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new LineItem();
      if (data.hasOwnProperty('lineNumber'))
        obj.lineNumber = ApiClient.convertToType(data['lineNumber'], Object);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], Object);
      if (data.hasOwnProperty('lineType'))
        obj.lineType = LineType.constructFromObject(data['lineType']);
      if (data.hasOwnProperty('Quantity'))
        obj.quantity = ApiClient.convertToType(data['Quantity'], Object);
      if (data.hasOwnProperty('fobId'))
        obj.fobId = ApiClient.convertToType(data['fobId'], Object);
      if (data.hasOwnProperty('ToleranceDetails'))
        obj.toleranceDetails = ToleranceDetails.constructFromObject(data['ToleranceDetails']);
      if (data.hasOwnProperty('allowPartialShipments'))
        obj.allowPartialShipments = ApiClient.convertToType(data['allowPartialShipments'], Object);
      if (data.hasOwnProperty('unitPrice'))
        obj.unitPrice = ApiClient.convertToType(data['unitPrice'], Object);
      if (data.hasOwnProperty('lineItemTotal'))
        obj.lineItemTotal = ApiClient.convertToType(data['lineItemTotal'], Object);
      if (data.hasOwnProperty('requestedShipDate'))
        obj.requestedShipDate = ApiClient.convertToType(data['requestedShipDate'], Object);
      if (data.hasOwnProperty('requestedInHandsDate'))
        obj.requestedInHandsDate = ApiClient.convertToType(data['requestedInHandsDate'], Object);
      if (data.hasOwnProperty('referenceSalesQuote'))
        obj.referenceSalesQuote = ApiClient.convertToType(data['referenceSalesQuote'], Object);
      if (data.hasOwnProperty('Program'))
        obj.program = ApiClient.convertToType(data['Program'], Object);
      if (data.hasOwnProperty('endCustomerSalesOrder'))
        obj.endCustomerSalesOrder = ApiClient.convertToType(data['endCustomerSalesOrder'], Object);
      if (data.hasOwnProperty('productId'))
        obj.productId = ApiClient.convertToType(data['productId'], Object);
      if (data.hasOwnProperty('customerProductId'))
        obj.customerProductId = ApiClient.convertToType(data['customerProductId'], Object);
      if (data.hasOwnProperty('lineItemGroupingId'))
        obj.lineItemGroupingId = ApiClient.convertToType(data['lineItemGroupingId'], Object);
      if (data.hasOwnProperty('PartArray'))
        obj.partArray = ApiClient.convertToType(data['PartArray'], Object);
      if (data.hasOwnProperty('Configuration'))
        obj.configuration = ApiClient.convertToType(data['Configuration'], Object);
    }
    return obj;
  }
}

/**
 * @member {Object} lineNumber
 */
LineItem.prototype.lineNumber = undefined;

/**
 * @member {Object} description
 */
LineItem.prototype.description = undefined;

/**
 * @member {module:model/LineType} lineType
 */
LineItem.prototype.lineType = undefined;

/**
 * @member {Object} quantity
 */
LineItem.prototype.quantity = undefined;

/**
 * Used to indicate the FOB point.  Use fobId from the supplier’s Product Pricing and Configuration Service to populate this information
 * @member {Object} fobId
 */
LineItem.prototype.fobId = undefined;

/**
 * @member {module:model/ToleranceDetails} toleranceDetails
 */
LineItem.prototype.toleranceDetails = undefined;

/**
 * @member {Object} allowPartialShipments
 */
LineItem.prototype.allowPartialShipments = undefined;

/**
 * @member {Object} unitPrice
 */
LineItem.prototype.unitPrice = undefined;

/**
 * @member {Object} lineItemTotal
 */
LineItem.prototype.lineItemTotal = undefined;

/**
 * The date the line item is requested to ship from the FOB point
 * @member {Object} requestedShipDate
 */
LineItem.prototype.requestedShipDate = undefined;

/**
 * The date the line item is requested to arrive at the shipping destination
 * @member {Object} requestedInHandsDate
 */
LineItem.prototype.requestedInHandsDate = undefined;

/**
 * The sales quote number associated with this purchase order line (if applicable)
 * @member {Object} referenceSalesQuote
 */
LineItem.prototype.referenceSalesQuote = undefined;

/**
 * @member {Object} program
 */
LineItem.prototype.program = undefined;

/**
 * The distributor’s order number provided to the end customer
 * @member {Object} endCustomerSalesOrder
 */
LineItem.prototype.endCustomerSalesOrder = undefined;

/**
 * The manufacturer’s product id associated with the configuration data
 * @member {Object} productId
 */
LineItem.prototype.productId = undefined;

/**
 * The distributor’s product id
 * @member {Object} customerProductId
 */
LineItem.prototype.customerProductId = undefined;

/**
 * An identifier that allows configuration data to be spread out among multiple purchase order lines. Keep `lineItemGroupingID` unique when referencing the same product on the purchase order.  Any change to the product, location, decoration, or artwork should produce a unique `lineItemGroupingID` to the purchase order
 * @member {Object} lineItemGroupingId
 */
LineItem.prototype.lineItemGroupingId = undefined;

/**
 * @member {Object} partArray
 */
LineItem.prototype.partArray = undefined;

/**
 * @member {Object} configuration
 */
LineItem.prototype.configuration = undefined;

